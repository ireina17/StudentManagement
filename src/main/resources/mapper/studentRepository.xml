<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="raisetech.StudentManagement.repository.StudentRepository">

    <!-- 受講生の全件検索 -->
    <select id="findStudentsByAll" resultType="raisetech.StudentManagement.data.Student">
        SELECT * FROM student
    </select>

    <!-- 受講生の検索 -->
    <select id="searchStudentById" resultType="raisetech.StudentManagement.data.Student">
        SELECT * FROM student WHERE id =#{id}
    </select>

    <!-- 受講生の名前を検索 -->
    <select id="findStudentsByName" resultType="raisetech.StudentManagement.data.Student">
        SELECT * FROM student WHERE name =#{name}
    </select>

    <!-- 受講生のカナ名を検索 -->
    <select id="findStudentsByKanaName" resultType="raisetech.StudentManagement.data.Student">
        SELECT * FROM student WHERE kana_name =#{kana_name}
    </select>

    <!-- 受講生のニックネームを検索 -->
    <select id="findStudentsByNickname" resultType="raisetech.StudentManagement.data.Student">
        SELECT * FROM student WHERE nickname =#{nickname}
    </select>

    <!-- 受講生のメールを検索 -->
    <select id="findStudentsByEmail" resultType="raisetech.StudentManagement.data.Student">
        SELECT * FROM student WHERE email =#{email}
    </select>

    <!-- 受講生の地域を検索 -->
    <select id="findStudentsByArea" resultType="raisetech.StudentManagement.data.Student">
        SELECT * FROM student WHERE area =#{area}
    </select>

    <!-- 受講生の年齢を検索 -->
    <select id="findStudentsByAge" resultType="raisetech.StudentManagement.data.Student">
        SELECT * FROM student WHERE age =#{age}
    </select>

    <!-- 受講生の性別を検索 -->
    <select id="findStudentsBySex" resultType="raisetech.StudentManagement.data.Student">
        SELECT * FROM student WHERE sex =#{sex}
    </select>

    <!-- 受講生の備考を検索 -->
    <select id="findStudentsByRemark" resultType="raisetech.StudentManagement.data.Student">
        SELECT * FROM student WHERE remark =#{remark}
    </select>

    <!-- 受講生の削除フラグを検索 -->
    <select id="findStudentsByIsDeleted" resultType="raisetech.StudentManagement.data.Student">
        SELECT * FROM student WHERE is_deleted =#{is_deleted}
    </select>

    <!-- 受講生コース情報の全件検索 -->
    <select id="findStudentCoursesByAll" resultType="raisetech.StudentManagement.data.StudentCourse">
        SELECT * FROM students_courses
    </select>

    <!-- 受講生IDに紐づく受講生コース情報を検索 -->
    <select id="searchStudentCourseById" resultType="raisetech.StudentManagement.data.StudentCourse">
        SELECT * FROM students_courses WHERE student_id =#{studentId}
    </select>

    <!-- コース申し込み状況を全件検索 -->
    <select id="findCourseStatusByAll" resultType="raisetech.StudentManagement.data.CourseStatus">
        SELECT * FROM course_status
    </select>

    <!-- コース申し込み状況IDに紐づくコース申し込み状況を検索 -->
    <select id="searchCourseStatus" resultType="raisetech.StudentManagement.data.CourseStatus">
        SELECT * FROM course_status WHERE id =#{id}
    </select>

    <!-- 受講生を新規登録します。IDに関しては自動採番を行う。 -->
    <insert id="registerStudent" parameterType="raisetech.StudentManagement.data.Student" useGeneratedKeys="true"
            keyProperty="id">
        INSERT INTO student(name, kana_name, nickname, email, area, age, sex, remark, is_deleted)
        VALUES(#{name},#{kanaName}, #{nickname}, #{email}, #{area}, #{age}, #{sex}, #{remark}, false)
    </insert>

    <!-- 受講生を新規登録します。IDに関しては自動採番を行う。 -->
    <insert id="registerStudentCourse" parameterType="raisetech.StudentManagement.data.StudentCourse"
            useGeneratedKeys="true" keyProperty="id">
        INSERT INTO students_courses(student_id,course_name,course_start,course_end)
        VALUES(#{studentId},#{courseName},#{courseStart},#{courseEnd})
    </insert>

    <!-- コース申し込み状況を新規登録します。IDに関しては自動採番を行う -->
    <insert id="registerCourseStatus" parameterType="raisetech.StudentManagement.data.CourseStatus"
            useGeneratedKeys="true" keyProperty="id">
        INSERT INTO course_status(course_id,course_status)
        VALUES(#{courseId},#{courseStatus})
    </insert>

    <!-- 受講生を更新 -->
    <update id="updateStudent" parameterType="raisetech.StudentManagement.data.Student">
        UPDATE student SET name=#{name}, kana_name =#{kanaName}, nickname=#{nickname}, email=#{email}, area=#{area},
        age=#{age}, sex=#{sex}, remark=#{remark}, is_deleted=#{isDeleted} WHERE id=#{id}
    </update>

    <!-- 受講生を更新 -->
    <update id="updateStudentCourse" parameterType="raisetech.StudentManagement.data.Student">
        UPDATE students_courses SET course_name=#{courseName} WHERE id =#{id}
    </update>

    <!-- コース申し込み状況を更新 -->
    <update id="updateCourseStatus" parameterType="raisetech.StudentManagement.data.CourseStatus">
        UPDATE course_status SET course_status=#{courseStatus} WHERE id =#{id}
    </update>

</mapper>